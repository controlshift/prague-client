(function(){describe("DonationsFormModel",function(){var target;beforeEach(function(){target=new DonationsFormModel($)}),describe("Form validations",function(){it("should check for presence of first name",function(){return target.firstName("Foo"),expect(target.firstName.isValid()).toBeTruthy(),target.firstName(null),expect(target.firstName.isValid()).toBeFalsy()}),it("should return true for a valid email",function(){return target.email("a@b.com"),expect(target.email.isValid()).toBeTruthy()}),it("should return false for an invalid email",function(){return target.email("ab.com"),expect(target.email.isValid()).toBeFalsy()}),it("should accept a valid cvc",function(){return target.cvc("432"),expect(target.cvc.isValid()).toBeTruthy()}),it("should reject an invalid cvc",function(){return target.cvc("432a"),expect(target.cvc.isValid()).toBeFalsy()}),it("should accept a valid credit card #",function(){return target.cardNumber("4242 4242 4242 4242"),expect(target.cardNumber.isValid()).toBeTruthy()}),it("should reject an invalid credit card #",function(){return target.cardNumber("4242 4242"),expect(target.cardNumber.isValid()).toBeFalsy()}),it("should accept a valid date",function(){return target.cardMonth("01"),target.cardYear(""+((new Date).getFullYear()+1)),expect(target.cardDate.isValid()).toBeTruthy()}),it("should reject an old date",function(){return target.cardMonth("01"),target.cardYear(""+((new Date).getFullYear()-1)),expect(target.cardDate.isValid()).toBeFalsy()})}),describe("Parsing query strings",function(){it("should return the expected hash",function(){return expect(target.parseQueryString("foo=bar&foo2=bar2")).toEqual({foo:"bar",foo2:"bar2"})}),it("should return an empty hash when the query string is undefined or blank",function(){return expect(target.parseQueryString("")).toEqual({}),expect(target.parseQueryString(void 0)).toEqual({})})})})}).call(this);